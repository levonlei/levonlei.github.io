<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>golang中下划线_的用法</title>
    <link href="/2022/08/14/underline_use/"/>
    <url>/2022/08/14/underline_use/</url>
    
    <content type="html"><![CDATA[<h1 id="golang中下划线-的用法"><a href="#golang中下划线-的用法" class="headerlink" title=" golang中下划线_的用法"></a><center> golang中下划线_的用法</h1><h3 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h3><ul><li><a href="#menuIndex1">背景</a></li><li><a href="#menuIndex2">用法一：类型断言</a></li><li><a href="#menuIndex3">用法二：忽略返回值</a></li><li><a href="#menuIndex4">用法三：引入包</a></li></ul><h3 id="menuIndex1">背景</h3>在看很多源码的时候会出现下划线的用法，尤其是用在接口与结构体之间进行断言，kubernets，kuberbuilder之中都存在。自己总结了一下，下划线的用法，记录下来。<h3 id="menuIndex2">用法一：类型断言</h3>假设我们定义了interface<pre class="prettyprint linenums"><code><span class="pln">type Foo interface &#123;     Say()&#125;</span></code></pre>定义struct<pre class="prettyprint linenums"><code><span class="pln">type Dog struct &#123;&#125;</span></code></pre>后我们希望在代码中判断Dog这个struct是否实现了Foo这个interface，就可以如下这么写。<pre class="prettyprint linenums"><code><span class="pln">var _ Foo = Dog&#123;&#125; &#123;&#125;</span></code></pre>假设没有实现的话，ide会波浪线标识以及告诉你哪个没实现，再者编译的时候会直接报错。可以很好的帮助我们编程时候发现错误<h3 id="menuIndex3">用法二：忽略返回值</h3>假设一个函数定义了多个变量，我们只需要其中一个，其他的不要用到，就可以这么使用。这是下划线在go中最常见的用法了。<pre class="prettyprint linenums"><code><span class="pln">v1, _ := func(...) &#123;&#125;</span></code></pre><h3 id="menuIndex4">用法三：引入包</h3>假设我们在代码的import中这样引入package：<pre class="prettyprint linenums"><code><span class="pln">import _ "test/foo" &#123;&#125;</span></code></pre>这表示呢在执行本段代码之前会先调用test/foo中的初始化函数(init)，这种使用方式仅让导入的包做初始化，而不使用包中其他功能。适用于本包文件的运行，必须执行某个包的init函数，避免panic问题]]></content>
    
    
    <categories>
      
      <category>golang</category>
      
    </categories>
    
    
  </entry>
  
  
  
  
</search>
